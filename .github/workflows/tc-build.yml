# This workflow will build a Java project with Gradle when changes are pushed to any branch
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
# .github/workflows/tc-build.yml
name: tc-build

on:
  push:
    branches:
      - '*'
      - '!staging'
      - '!master'

env:
  AWS_ACCESS_KEY_ID: AKIATLUVZAGYXPBWDGF7
  ORG_GRADLE_PROJECT_org_gradle_jvmargs: -Xmx4096m
  testcontainers.container.mount: /dump.sql
  testcontainers.dump.location: server/src/test/resources/dump.sql.gz
  testcontainers.reuse.enabled: false  # Disable reuse to avoid container state issues

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_TEST }}
          aws-region: us-east-1

      - name: Download DB dump from S3
        run: |
          mkdir -p server/src/test/resources
          aws s3 cp s3://tctalent-integration-db-dumps/dump.sql.gz server/src/test/resources/dump.sql.gz

      - name: Verify dump file exists and is valid gzip
        run: |
          echo "üì¶ Contents of server/src/test/resources:"
          ls -lh server/src/test/resources

          echo "üîç File type:"
          file server/src/test/resources/dump.sql.gz

          echo "üß™ Gzip test:"
          gunzip -t server/src/test/resources/dump.sql.gz

          echo "üìñ Preview of dump.sql.gz (first 20 lines):"
          gzip -d -c server/src/test/resources/dump.sql.gz | head -n 20

      - name: Debug disk space and heap settings
        run: |
          echo "üíæ Disk usage:"
          df -h
          echo "üß† Java heap config:"
          echo "$ORG_GRADLE_PROJECT_org_gradle_jvmargs"

      - name: Check workspace size
        run: du -sh .

      - name: Run integration tests (specific class, for debugging)
        run: ./gradlew server:build --info --stacktrace --debug

      # Replace above step with this one later to run all tests:
      # - name: Run all integration tests
      #   run: ./gradlew server:test --tests "org.tctalent.server.integration.repo.*" --info --stacktrace --debug

      - name: Upload test report on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: server/build/reports/tests/test
