/*
 * Copyright (c) 2021 Talent Beyond Boundaries.
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU Affero General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see https://www.gnu.org/licenses/.
 */
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.cloud.tools.jib' version '3.4.4'
}

group = 'org.tctalent'
version = '0.0.1-SNAPSHOT'
ext {
    isDev = System.properties['env'] == 'dev'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

//See https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-6.1-Release-Notes
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    //See https://stackoverflow.com/questions/76706612/standard-commons-logging-discovery-in-action-with-spring-jcl
    configureEach {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    if (!isDev) {
        implementation(project(':ui:admin-portal'))
        implementation(project(':ui:candidate-portal'))
        implementation(project(':ui:public-portal'))
    }

    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:elasticsearch'
    testImplementation 'org.testcontainers:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //Extra stuff not part of Spring Initializr

    testImplementation 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    //Note that Spring Initializr pulls in org.flywaydb:flyway-core but that will not process
    //older Postgres DB versions. We need the the following dependency
    //See https://github.com/flyway/flyway/issues/3902
    implementation 'org.flywaydb:flyway-database-postgresql'

    //See https://stackoverflow.com/questions/75768422/cannot-find-messagematcherdelegatingauthorizationmanager-class-while-trying-to-c
    //Does not get included in Spring Boot starter
    implementation 'org.springframework.security:spring-security-messaging'

    implementation platform('com.google.cloud:libraries-bom:22.0.0')
    implementation 'com.google.cloud:google-cloud-storage'
    implementation 'com.google.apis:google-api-services-sheets:v4-rev20210629-1.32.1'

    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.1'
    implementation group: 'org.apache.poi', name: 'poi', version: '4.1.2'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
    implementation group: 'org.apache.poi', name: 'poi-scratchpad', version: '4.1.2'
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk16', version: '1.45'
// https://mvnrepository.com/artifact/com.slack.api/slack-api-client
    implementation group: 'com.slack.api', name: 'slack-api-client', version: '1.9.0'
    implementation("org.jdom:jdom2")
// https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.47'

    //See https://github.com/samdjstevens/java-totp/tree/master/totp-spring-boot-starter
    implementation 'dev.samstevens.totp:totp-spring-boot-starter:1.7.1'

    // https://mvnrepository.com/artifact/com.opencsv/opencsv
    implementation group: 'com.opencsv', name: 'opencsv', version: '5.4'

    // https://github.com/lukas-krecan/ShedLock
    implementation "net.javacrumbs.shedlock:shedlock-spring:5.10.0"
    implementation "net.javacrumbs.shedlock:shedlock-provider-jdbc-template:5.10.0"

    implementation 'com.google.guava:guava:31.1-jre'
    implementation("io.jsonwebtoken:jjwt-api:0.11.2")
    implementation 'com.google.api-client:google-api-client:1.32.1'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.32.1'
    implementation 'com.google.apis:google-api-services-drive:v3-rev20210725-1.32.1'

    implementation("org.apache.commons:commons-lang3")
    implementation('com.amazonaws:aws-java-sdk-s3:1.11.656')
    implementation('com.opencsv:opencsv:5.0')
    implementation('commons-beanutils:commons-beanutils:1.9.4')
    implementation('org.xhtmlrenderer:flying-saucer-pdf-itext5:9.1.22')
    implementation('net.sf.jtidy:jtidy:r938')
    implementation('org.jsoup:jsoup:1.15.4')


    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.2", "io.jsonwebtoken:jjwt-jackson:0.11.2")

}

tasks.named('test') {
    useJUnitPlatform()
}

jib {
    to {
        if (project.hasProperty("test-tc-system")) {
            image = "231168606641.dkr.ecr.us-east-1.amazonaws.com/test-ecs"
        } else if (project.hasProperty("prod-tc-system")) {
            image = "968457613372.dkr.ecr.us-east-1.amazonaws.com/talent-catalog"
        }
        credHelper = 'ecr-login'
    }
}

test {
    useJUnitPlatform()
}

bootJar {
    from(".") {
        include ".ebextensions/**"
    }
}

