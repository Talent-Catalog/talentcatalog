clone:
  depth: full

pipelines: # We set up all the pipeline or actions beneath test

  branches: # This is branch specific configuration, we can set for different branches and different actions when we push codes
    master:
      - step:
          name: "Build bundle jar file"
          image: java:8
          script:
            # Install the Amazon ECR credential helper which is used by the
            # jib plugin in the gradle file to build a docker image.
            # The credential helper will pick up the authentication it needs
            # from the environment variables AWS_ACCESS_KEY_ID and
            # AWS_SECRET_ACCESS_KEY.
            # See https://support.atlassian.com/bitbucket-cloud/docs/specify-dependencies-in-your-pipelines-build/
            - apt-get update && apt-get install -y amazon-ecr-credential-helper
            
            # Build using gradle
            - bash ./gradlew clean stage
          artifacts:
            - server/build/libs/server.jar
      - step:
          name: "Deploy to Production"
          image: atlassian/default-image:2
          deployment: production
          script:
            - pipe: atlassian/aws-elasticbeanstalk-deploy:0.5.0
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: "us-east-1"
                APPLICATION_NAME: "tbb-app-prod"
                ENVIRONMENT_NAME: 'TbbAppProd-env'
                ZIP_FILE: "server/build/libs/server.jar"
