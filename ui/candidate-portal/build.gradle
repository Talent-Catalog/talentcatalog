/*
 * Copyright (c) 2024 Talent Catalog.
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU Affero General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see https://www.gnu.org/licenses/.
 */

//todo Note that candidate-portal and admin-portal build.gradle files
//are now identical. We should be able to eliminate that duplication.
//Thinking buildSrc and Kotlin

plugins {
  id 'java'
  id "com.github.node-gradle.node" version "3.4.0"
}

java {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

node {
  version = '16.17.0'
  download = true
}

//NpmTask runs an npm command with the given arguments.
//https://github.com/srs/gradle-node-plugin/blob/master/src/main/groovy/com/moowork/gradle/node/npm/NpmTask.groovy
//In this case the args specify that the npm run (aka npm run-script) command
//is executed.
//See https://docs.npmjs.com/cli/v6/commands/npm-run-script
//See also https://stackoverflow.com/questions/11580961/sending-command-line-arguments-to-npm-script
//This runs the Angular script "build" ("ng build" - see Package.json) which
//Angular includes in the default created package.json.
//The parameters after the '--' are passed to the Angular build script
//- ie to ng build
//See https://angular.io/cli/build
//So this task effectively runs "ng build --configuration production --base-href /...-portal/"
task npm_build_ui_bundle(type: NpmTask) {
  args = ['run', 'build', '--', '--configuration', 'production', '--base-href', "/$project.name/"]
  dependsOn 'npm_install'
}

//This creates a jar which when unpacked has all the Angular stuff in a
//subdirectory called ui-bundle.
//Both portals will have their classes in that subdirectory.
//The Spring Server WebConfiguration class serves up that Angular stuff from
//that ui-bundle subdirectory directory.
jar {
  from 'dist' into 'ui-bundle'
  dependsOn 'npm_build_ui_bundle'
}
